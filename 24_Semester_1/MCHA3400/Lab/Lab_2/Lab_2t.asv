clear
clc

%% Parameters Structure
params.m1 = 600;
params.m2 = 1200;
params.b1 = 10;
params.b2 = 6;
params.bd = 1400;
params.c = 9.8e-4;
params.l0 = 0.8;
params.B = 5;
params.t = 0:1:300;
params.p10 = 0;
params.p20 = 0;
params.xs0 = 0.8;

%% CCRs (Component Constitutive Relations)
params.Fs = @(xs) 1/params.c * (xs - params.l0) + params.B/xs + params.B/(2 * params.l0 - xs);  % Spring force
params.Fd = @(vd) (params.bd * vd) * abs(vd);                      % Damping force

%% SSRs (State-Space Relations)
params.vm1 = @(p1) 1/params.m1 * p1;                         % Momentum to velocity
params.vm2 = @(p2) 1/params.m2 * p2;
params.vb1 = @(vm1) vm1;                                     % Velocity connections
params.vb2 = @(vm2) vm2;
params.vd = @(vm1, vm2) vm1 - vm2;                           % Damper velocity
params.vs = @(vm1, vm2) vm1 - vm2;                           % Spring velocity
params.vT = @(vm1) vm1;                                     % Truck velocity

params.Fm1 = @(Fd, Fs, Fb1, FT) - Fd - Fs - Fb1 + FT;      % Forces on mass 1
params.Fm2 = @(Fd, Fs, Fb2) Fd + Fs - Fb2;                  % Forces on mass 2

params.FT = @(vm1) 300 - vm1 * (28/300);                    % Input force

%% State Equations
params.p1dotfun = @(t, p1, p2, xs) params.Fm1(params.Fd(params.vd(params.vm1(p1), params.vm2(p2))), params.Fs(xs), params.b1 * params.vb1(params.vm1(p1)), params.FT(params.vm1(p1)));
params.p2dotfun = @(t, p1, p2, xs) params.Fm2(params.Fd(params.vd(params.vm1(p1), params.vm2(p2))), params.Fs(xs), params.b2 * params.vb2(params.vm2(p2)));
params.xsdotfun = @(t, p1, p2, xs) params.vs(params.vm1(p1), params.vm2(p2));

%% State Vector and Combined State Equation
x = [params.p10; params.p20; params.xs0];      % Initial state
f = @(t, x) [params.p1dotfun(t, x(1), x(2), x(3)); ...
  params.p2dotfun(t, x(1), x(2), x(3)); ...
  params.xsdotfun(t, x(1), x(2), x(3))];

%% Simulation
[t, x] = ode45(f, params.t, x, ...
  odeset('RelTol',1e-6));

%% Plotting Results
figure(1);
plot(t, x(:,1), 'b-', 'LineWidth', 2);
hold on;
plot(t, x(:,2), 'r-', 'LineWidth', 2);
plot(t, x(:,3), 'g-', 'LineWidth', 2);
hold off;
xlabel('Time (s)');
ylabel('State Variables');
legend('p1', 'p2', 'xs');
title('Truck System State Trajectories');
grid on;
